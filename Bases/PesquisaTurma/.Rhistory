# Boxplot
dados = data.frame(
idade = c(31, 32, 32, 32, 33, 35, 36, 36, 37, 37, 38, 39, 39, 40, 40, 40, 41, 42, 42, 43,
43, 44, 45, 45, 46, 46, 47, 48, 48, 51, 53, 55, 56, 56, 60, 60, 61, 62, 76, 79,
21, 24, 25, 26, 26, 26, 26, 27, 28, 30, 30, 31, 31, 33, 33, 33, 34, 34, 34, 34,
35, 35, 35, 37, 37, 38, 39, 41, 41, 41, 42, 44, 49, 50, 60, 61, 61, 74, 80, 81),
sexo  = rep(c('Homem', 'Mulher'), each = 40)
)
boxplot(dados$idade, dados$sexo)
boxplot(dados$sexo, dados$idade)
?boxplot()
# Boxplot
dados = data.frame(
idade = c(31, 32, 32, 32, 33, 35, 36, 36, 37, 37, 38, 39, 39, 40, 40, 40, 41, 42, 42, 43,
43, 44, 45, 45, 46, 46, 47, 48, 48, 51, 53, 55, 56, 56, 60, 60, 61, 62, 76, 79,
21, 24, 25, 26, 26, 26, 26, 27, 28, 30, 30, 31, 31, 33, 33, 33, 34, 34, 34, 34,
35, 35, 35, 37, 37, 38, 39, 41, 41, 41, 42, 44, 49, 50, 60, 61, 61, 74, 80, 81),
sexo  = rep(c('Homem', 'Mulher'), each = 40)
)
boxplot(dados$idade, dados$sexo)
# Boxplot
dados = data.frame(
idade = c(31, 32, 32, 32, 33, 35, 36, 36, 37, 37, 38, 39, 39, 40, 40, 40, 41, 42, 42, 43,
43, 44, 45, 45, 46, 46, 47, 48, 48, 51, 53, 55, 56, 56, 60, 60, 61, 62, 76, 79,
21, 24, 25, 26, 26, 26, 26, 27, 28, 30, 30, 31, 31, 33, 33, 33, 34, 34, 34, 34,
35, 35, 35, 37, 37, 38, 39, 41, 41, 41, 42, 44, 49, 50, 60, 61, 61, 74, 80, 81),
sexo  = rep(c('Homem', 'Mulher'), each = 40)
)
boxplot(dados$idade ~ dados$sexo)
boxplot(dados$idade ~ dados$sexo,
ylim = c(20, 100),
main = '')
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = '')
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = 'Boxplot para comparação de idade entre dois grupos')
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = 'Boxplot para comparação de idades')
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = 'Boxplot para comparação de idades'),
xlab = '', ylab = 'Idade
)'
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = 'Boxplot para comparação de idades'),
xlab = '', ylab = 'Idade'
boxplot(dados$idade ~ dados$sexo,
ylim = c(15, 85),
main = 'Boxplot para comparação de idades',
xlab = '', ylab = 'Idade'
)
x = seq(-5, 5, by = 0.1)
y = myfunc(x)
# Funções
myfunc = function (x) {
return (x ** 2)
}
# Impressão na tela
print(paste0('Meu nome é ', name, '!')) # paste0() concatena sem espaço adicional, em oposição à função paste()
# Variáveis
name = 'André'
vec1 = c(1:10) # vetor: 1, 2, ..., 10
vec2 = seq(0, 20, by = 2) # vetor: 0, 2, ..., 20
# Impressão na tela
print(paste0('Meu nome é ', name, '!')) # paste0() concatena sem espaço adicional, em oposição à função paste()
print(vec1)
# Estrutura de controle
if (name != 'André') {
print('Você não é o André!')
} else {
print('Usuário autenticado!')
}
# Estrutura de repetição
for (i in vec2) {
print(i)
}
# Para executar um bloco de código, basta selecioná-lo e apertar 'Ctrl + Enter'
# Alternativamente, selecione o código e pressione o botão 'Run' (canto superior direito)
# Caso haja alguma função que você não entendeu como funciona, por exemplo 'print()',
# basta digitar no console '?print()'; e a documentação aparecerá na janela do canto inferior direito
# Variáveis
name = 'André'
vec1 = c(1:10) # vetor: 1, 2, ..., 10
vec2 = seq(0, 20, by = 2) # vetor: 0, 2, ..., 20
# Impressão na tela
print(paste0('Meu nome é ', name, '!')) # paste0() concatena sem espaço adicional, em oposição à função paste()
print(vec1)
# Estrutura de controle
if (name != 'André') {
print('Você não é o André!')
} else {
print('Usuário autenticado!')
}
for (i in vec2) {
print(i)
}
c = 0
while (c <= 10) {
print(c)
c = c + 1
}
# Funções
myfunc = function (x) {
return (x ** 2)
}
x = seq(-5, 5, by = 0.1)
y = myfunc(x)
# Gráficos (Na próxima aula, vamos gerar alguns gráficos)
plot(x, y)
# Gráficos (Na próxima aula, vamos gerar alguns gráficos)
plot(x, y, type = 'l')
# Gráficos (Na próxima aula, vamos gerar alguns gráficos)
plot(x, y, type = 'L')
# Gráficos (Na próxima aula, vamos gerar alguns gráficos)
plot(x, y, type = 'l')
# Gráfico de barra
x = c('Banana', 'Maçã', 'Laranja', 'Morango', 'Limão')
y = sample.int(25, 5)
barplot(height = y, names = x,
ylim = c(0, 25),
main = 'Quantidade de frutas',
xlab = 'Frutas', ylab = 'Quantidade')
# Gráfico de barra
x = c('Banana', 'Maçã', 'Laranja', 'Morango', 'Limão')
y = sample.int(25, 5)
barplot(height = y, names = x,
ylim = c(0, 25),
main = 'Quantidade de frutas',
xlab = 'Frutas', ylab = 'Quantidade')
# Gráfico de linhas
myfunc = function(x, n){
return (2 * x + rnorm(n, 0, 1)) }
n = 11
x = c(0:(n - 1))
y = myfunc(x, n)
plot(x, y, type = 'l',
xlim = c(0, 10), ylim = c(-1, 21),
main = 'Evolução da variável resposta ao longo do tempo',
xlab = 'Tempo', ylab = 'Variável Resposta')
hist(obs)
hist(obs)
hist(obs)
# Histograma
obs = rnorm(1000, 0, 1)
hist(obs)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 11),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE
)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 9),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE
)
x = seq(-4, 4, by = 0.01)
y = dnorm(x)
lines(x, y)
# Gráfico de Pizza
x = c(10, 22, 45, 6, 17) # total = 100
pie(x)
pie(x,
labels = c('Classe A', 'Classe B', 'Classe C', 'Classe D', 'Classe E'),
main = 'Gráfico de pizza')
# install.packages('plotrix')
library(plotrix)
pie3D(x, col = rainbow(length(x)),
main = 'Gráfico de pizza')
legend("topright", c('Classe A', 'Classe B', 'Classe C', 'Classe D', 'Classe E'),
fill = rainbow(length(x)),
inset = 0.05, cex = 0.5)
# install.packages('plotrix')
library(plotrix)
pie3D(x, col = rainbow(length(x)),
main = 'Gráfico de pizza')
legend("topright", c('Classe A', 'Classe B', 'Classe C', 'Classe D', 'Classe E'),
fill = rainbow(length(x)),
)#inset = 0.05, cex = 0.5)
# Histograma
obs = rnorm(1000, 0, 1)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 9),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE
)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 9),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE, cex = 2
)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 9),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE, cex = 1
)
hist(obs, col = 'gray',
xlim = c(-4, 4), # ylim = c(0, 0.5),
breaks = seq(-4, 4, l = 9),
main = 'Histograma para distribuição Normal',
xlab = 'Variável de interesse', ylab = 'Densidade', # ylab  = 'Frequência absoluta',
probability = TRUE, cex = 2
)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # IMPORTANTE: utiliza o diretório do arquivo como caminho base
dados = read.csv(file = 'formulario.csv')
dados
# Gráfico de barra
curso = unique(sort(dados$curso))
freq  = table(dados$curso)
barplot(height = freq, names = curso,
ylim = c(0, 40),
main = 'Quantidade de alunos por curso',
xlab = 'Cursos', ylab = 'Frequência absoluta')
dados = read.csv(file = 'formulario.csv')
dados$tempo_viagem
dados
